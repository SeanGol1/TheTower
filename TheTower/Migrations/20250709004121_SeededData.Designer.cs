// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheTower.Models;

namespace TheTower.Migrations
{
    [DbContext(typeof(TowerContext))]
    [Migration("20250709004121_SeededData")]
    partial class SeededData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheTower.Models.Biome", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("RollNumber");

                    b.HasKey("ID");

                    b.ToTable("Biome");

                    b.HasData(
                        new { ID = 12, Description = "Arctic", Name = "Arctic", RollNumber = 1 },
                        new { ID = 1, Description = "Coastal", Name = "Coastal", RollNumber = 2 },
                        new { ID = 2, Description = "Desert", Name = "Desert", RollNumber = 3 },
                        new { ID = 3, Description = "Forest", Name = "Forest", RollNumber = 4 },
                        new { ID = 4, Description = "Grassland", Name = "Grassland", RollNumber = 5 },
                        new { ID = 5, Description = "Hill", Name = "Hill", RollNumber = 6 },
                        new { ID = 6, Description = "Mountain", Name = "Mountain", RollNumber = 7 },
                        new { ID = 7, Description = "Swamp", Name = "Swamp", RollNumber = 8 },
                        new { ID = 8, Description = "Underwater", Name = "Underdark", RollNumber = 9 },
                        new { ID = 9, Description = "Urban", Name = "Urban", RollNumber = 10 },
                        new { ID = 10, Description = "DM Chooses", Name = "DM Chooses", RollNumber = 11 },
                        new { ID = 11, Description = "DM Chooses", Name = "DM Chooses", RollNumber = 12 }
                    );
                });

            modelBuilder.Entity("TheTower.Models.CRRoll", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MonsterId");

                    b.Property<int>("MonsterQTY");

                    b.Property<int>("RollNumber");

                    b.Property<int>("SessionId");

                    b.Property<int>("XP");

                    b.HasKey("ID");

                    b.ToTable("CRRoll");
                });

            modelBuilder.Entity("TheTower.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("RollNumber");

                    b.HasKey("ID");

                    b.ToTable("Event");

                    b.HasData(
                        new { ID = 8, Description = "Players shrink down one size", Name = "Shrink", RollNumber = 1 },
                        new { ID = 1, Description = "Players grow one size up", Name = "Grow", RollNumber = 2 },
                        new { ID = 2, Description = "Players shrink down one size", Name = "Event", RollNumber = 3 },
                        new { ID = 3, Description = "Players shrink down one size", Name = "Shrink", RollNumber = 4 },
                        new { ID = 4, Description = "Players shrink down one size", Name = "Shrink", RollNumber = 5 },
                        new { ID = 5, Description = "Players shrink down one size", Name = "Shrink", RollNumber = 6 },
                        new { ID = 6, Description = "Players shrink down one size", Name = "Shrink", RollNumber = 7 },
                        new { ID = 7, Description = "Players shrink down one size", Name = "Shrink", RollNumber = 8 }
                    );
                });

            modelBuilder.Entity("TheTower.Models.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemCost");

                    b.Property<string>("ItemName");

                    b.Property<string>("Vendor");

                    b.HasKey("ID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("TheTower.Models.Level", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BiomeID");

                    b.Property<int>("CRLevel");

                    b.Property<int>("EventID");

                    b.Property<int>("MonsterID");

                    b.Property<string>("Name");

                    b.Property<int>("RoomLevel");

                    b.Property<int>("SessionID");

                    b.HasKey("ID");

                    b.HasIndex("SessionID");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("TheTower.Models.Monster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChallengeRating");

                    b.Property<string>("ImagePath");

                    b.Property<string>("Index");

                    b.Property<string>("Name");

                    b.Property<int>("RollNumber");

                    b.Property<string>("Source");

                    b.Property<int>("XP");

                    b.HasKey("ID");

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("TheTower.Models.MonsterCR", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CRRollId");

                    b.Property<int>("MonsterId");

                    b.Property<int>("RollNo");

                    b.Property<int>("SessionId");

                    b.HasKey("ID");

                    b.ToTable("MonsterCR");
                });

            modelBuilder.Entity("TheTower.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Char");

                    b.Property<int>("Init");

                    b.Property<string>("Name");

                    b.Property<int>("SessionId");

                    b.HasKey("ID");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("TheTower.Models.RoomRoll", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiceRoll");

                    b.Property<int>("RoomMove");

                    b.HasKey("ID");

                    b.ToTable("RoomRoll");
                });

            modelBuilder.Entity("TheTower.Models.Session", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentLevel");

                    b.Property<string>("DMName");

                    b.Property<int>("PlayerLevel");

                    b.Property<int>("PlayerQty");

                    b.Property<int>("SessionCode");

                    b.Property<int>("XP");

                    b.HasKey("ID");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("TheTower.Models.Level", b =>
                {
                    b.HasOne("TheTower.Models.Session")
                        .WithMany("LevelSetup")
                        .HasForeignKey("SessionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
