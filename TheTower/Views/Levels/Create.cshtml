@model TheTower.Models.Level


@{
    ViewData["Title"] = "Create";
    
}

<h2>Create</h2>

<h4>Level</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RoomLevel" class="control-label"></label>
                <input asp-for="RoomLevel" class="form-control" />
                <span asp-validation-for="RoomLevel" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventID" class="control-label"></label>
                <input asp-for="EventID" class="form-control" />
                <span asp-validation-for="EventID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SessionID" class="control-label"></label>
                @*<select asp-for="SessionID" class="form-control" asp-items="Model.Session"></select>*@
                @*@Html.DropDownListFor(s => Model.Session, new SelectList(Model.Session, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "ID" })*@
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
